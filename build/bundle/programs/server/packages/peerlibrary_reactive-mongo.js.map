{"version":3,"sources":["meteor://ðŸ’»app/packages/peerlibrary_reactive-mongo/packages/peerlibrary_reactive-mongo.js"],"names":[],"mappingsfile":"/packages/peerlibrary_reactive-mongo.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/peerlibrary:reactive-mongo/server.coffee.js                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar MeteorCursor, method, originalCount, originalExists, originalObserveChanges, _fn, _i, _len, _ref,\n  __slice = [].slice;\n\nMeteorCursor = Object.getPrototypeOf(MongoInternals.defaultRemoteCollectionDriver().mongo.find()).constructor;\n\noriginalObserveChanges = MeteorCursor.prototype.observeChanges;\n\noriginalCount = MeteorCursor.prototype.count;\n\noriginalExists = MeteorCursor.prototype.exists;\n\nMeteorCursor.prototype._isReactive = function() {\n  var _ref;\n  return (_ref = this._cursorDescription.options.reactive) != null ? _ref : true;\n};\n\nMeteorCursor.prototype._depend = function(changers) {\n  var dependency, fnName, initializing, options, _i, _len, _ref;\n  if (!Tracker.active) {\n    return;\n  }\n  dependency = new Tracker.Dependency();\n  dependency.depend();\n  initializing = true;\n  options = {};\n  _ref = ['added', 'changed', 'removed', 'addedBefore', 'movedBefore'];\n  for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n    fnName = _ref[_i];\n    if (changers[fnName]) {\n      options[fnName] = function() {\n        if (!initializing) {\n          return dependency.changed();\n        }\n      };\n    }\n  }\n  this.observeChanges(options);\n  return initializing = false;\n};\n\nMeteorCursor.prototype.observeChanges = function(options) {\n  var handle;\n  handle = originalObserveChanges.call(this, options);\n  if (Tracker.active && this._isReactive()) {\n    Tracker.onInvalidate((function(_this) {\n      return function() {\n        return handle.stop();\n      };\n    })(this));\n  }\n  return handle;\n};\n\n_ref = ['forEach', 'map', 'fetch'];\n_fn = function(method) {\n  var originalMethod;\n  originalMethod = MeteorCursor.prototype[method];\n  return MeteorCursor.prototype[method] = function() {\n    var args;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (this._isReactive()) {\n      this._depend({\n        addedBefore: true,\n        removed: true,\n        changed: true,\n        movedBefore: true\n      });\n    }\n    return originalMethod.apply(this, args);\n  };\n};\nfor (_i = 0, _len = _ref.length; _i < _len; _i++) {\n  method = _ref[_i];\n  _fn(method);\n}\n\nMeteorCursor.prototype.count = function() {\n  var args;\n  args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n  if (this._isReactive()) {\n    this._depend({\n      added: true,\n      removed: true\n    });\n  }\n  return originalCount.apply(this, args);\n};\n\nif (originalExists) {\n  MeteorCursor.prototype.exists = function() {\n    var args;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (this._isReactive()) {\n      this._depend({\n        added: true,\n        removed: true\n      });\n    }\n    return originalExists.apply(this, args);\n  };\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}